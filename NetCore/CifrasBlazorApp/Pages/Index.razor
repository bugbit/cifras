@page "/"

<div class="divMain">
    <h1>Cifras (programa "Cifras y letras" de la tele)</h1>

    <p>Encuentra la solución exacta o aproximación</p>

    <fieldset>
        <legend>Tipo Enunciado</legend>
        <label>
            <input type="radio" name="tenum" checked value=@(Cifras.Core.ETipoEnunciado.La2) @oninput="tenum_input"> La2
        </label>
        <label>
            <input type="radio" name="tenum" value=@(Cifras.Core.ETipoEnunciado.CanalSur) @oninput="tenum_input"> Canal Sur
        </label>
        <label>
            <input type="radio" name="tenum" value=@(Cifras.Core.ETipoEnunciado.Random1_100) @oninput="tenum_input"> Random 1-100
        </label>
    </fieldset>
    <br />
    Número a buscar:
    <input id="num" value=@(mEnunciado?.Objetivo) maxlength="3" />
    <br />
    <br />
    Pistas:
    <input id="0" maxlength="3" value=@GetPista(0) />
    <input id="1" maxlength="3" value=@GetPista(1) />
    <input id="2" maxlength="3" value=@GetPista(2) />
    <input id="3" maxlength="3" value=@GetPista(3) />
    <input id="4" maxlength="3" value=@GetPista(4) />
    <input id="5" maxlength="3" value=@GetPista(5) />
    <br />
    <br />
    <button @onclick="Genera_Click">Genera</button>
    <button onclick="resuelve()">Resuelve</button>
    <button onclick="jugar()">Jugar</button>
    <br />
    @if (TipoEnunciado == Cifras.Core.ETipoEnunciado.La2 && GeneradorGrupo != null)
    {
        <div class="Grupos">
            <div class="GrupoRow">
                @for (int c = 1, cols = Grupos.Length; c <= cols; c++)
                {
                    <div class="GrupoCell">
                        <p>@c</p>
                    </div>
                }
            </div>
            @for (int rows = Grupos.Max(), cols = Grupos.Length, r = 0; r < rows; r++)
            {
                <div class="GrupoRow">
                    @for (var c = 0; c < cols; c++)
                    {
                        <div class="GrupoCell">
                            @if (r + 1 <= Grupos[c])
                            {
                                <div class="BlockGrupo"></div>
                            }
                        </div>
                    }
                </div>
            }
            <div class="GrupoRow">
                @for (int c = 1, cols = Grupos.Length; c <= cols; c++)
                {
                    <div class="GrupoCell">
                        <button @onclick=@(e=>elegirgrupo_click(c))>Elegir</button>
                    </div>
                }
            </div>
            <br />
        </div>
        <p style="color:green">@MensajeElegirCPU</p>
    }
    <br />
    Solución:
    <br /><pre id="sol" style="border:solid 1px blue;width:150px;height:135px;padding:10px;text-align:right;margin:0 auto"></pre>
    <br />
    <div id="tiempo" style="font-size:12px"></div>
</div>

@code
{
    private Cifras.Core.ETipoEnunciado TipoEnunciado = Cifras.Core.ETipoEnunciado.La2;
    private Cifras.Core.Generador.IGeneradorEnunciadoElegirGrupo GeneradorGrupo = null;
    private int[] Grupos;
    private string MensajeElegirCPU = string.Empty;
    private Cifras.Core.Enunciado mEnunciado = null;

    private string GetPista(int argIdxPista)
    {
        if (mEnunciado == null || mEnunciado.Pistas == null || argIdxPista < 0 || argIdxPista > mEnunciado.Pistas.Length)
            return string.Empty;

        return mEnunciado.Pistas[argIdxPista].ToString();
    }

    private void tenum_input(ChangeEventArgs e)
    {
        TipoEnunciado = Enum.Parse<Cifras.Core.ETipoEnunciado>
(Convert.ToString(e.Value));
    }

    private void elegirgrupo_click(int argGrupo)
    {
        GeneradorGrupo.SetGrupo(argGrupo);

        var pGrupoCPU = GeneradorGrupo.SetGrupoCPU();

        MensajeElegirCPU = $"La CPU ha elegido el grupo {pGrupoCPU}";
        Grupos = GeneradorGrupo.LongGrupos;

        if (GeneradorGrupo.SeHaAcabadoDeEligir)
        {
            mEnunciado = GeneradorGrupo.Generar();
            GeneradorGrupo = null;
        }
    }

    private void Genera_Click()
    {
        GeneradorGrupo = new Cifras.Core.Generador.GeneradorEnunciadoTVE();
        Grupos = GeneradorGrupo.LongGrupos;
    }
}
